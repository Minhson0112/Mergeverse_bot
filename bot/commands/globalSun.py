import discord
from discord import app_commands
from discord.ext import commands
import requests
from bot.config import BACKEND_HOST
from ..utils.channel_check import is_channel_allowed

BACKEND_URL = f"{BACKEND_HOST}/api/global-sun-rank"

class GlobalSun(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="globalsun", description="Top 10 ng∆∞·ªùi t·∫°o ra M·∫∑t Tr·ªùi nhanh nh·∫•t to√†n c·∫ßu")
    async def global_sun(self, interaction: discord.Interaction):
        if not await is_channel_allowed(interaction):
            await interaction.response.send_message(
                "‚ö†Ô∏è Bot kh√¥ng ƒë∆∞·ª£c ph√©p ho·∫°t ƒë·ªông ·ªü k√™nh n√†y. H√£y d√πng l·ªánh `/setchannel` ƒë·ªÉ thi·∫øt l·∫≠p.",
                ephemeral=True
            )
            return
        
        discord_id = interaction.user.id

        try:
            response = requests.get(BACKEND_URL, params={"discord_id": discord_id})
            data = response.json()

            embed = discord.Embed(
                title="üåû Top 10 Ng∆∞·ªùi T·∫°o M·∫∑t Tr·ªùi Nhanh Nh·∫•t",
                description="D·ª±a tr√™n m·ªëc th·ªùi gian t·∫°o ra M·∫∑t Tr·ªùi (c√†ng nhanh c√†ng t·ªët)",
                color=discord.Color.orange()
            )

            # Danh s√°ch top 10
            top10 = data.get("top10", [])
            if not top10:
                embed.add_field(name="Kh√¥ng c√≥ d·ªØ li·ªáu", value="Ch∆∞a ai t·∫°o ra M·∫∑t Tr·ªùi!", inline=False)
            else:
                for i, player in enumerate(top10, start=1):
                    total_seconds = player["sun_time"] // 1000
                    minutes = total_seconds // 60
                    seconds = total_seconds % 60
                    embed.add_field(
                        name=f"#{i} {player['username']}",
                        value=f"‚òÄÔ∏è {minutes} ph√∫t {seconds} gi√¢y",
                        inline=False
                    )

            # X·∫øp h·∫°ng ng∆∞·ªùi d√πng
            user_rank = data.get("user_rank")
            user_time = data.get("user_time")

            if user_rank is not None and user_time is not None:
                total_seconds = user_time // 1000
                minutes = total_seconds // 60
                seconds = total_seconds % 60
                embed.set_footer(
                    text=f"üìä {interaction.user.name}, b·∫°n ƒëang x·∫øp h·∫°ng #{user_rank} v·ªõi {minutes} ph√∫t {seconds} gi√¢y."
                )
            else:
                embed.set_footer(text="ü§î B·∫°n ch∆∞a t·ª´ng t·∫°o ra M·∫∑t Tr·ªùi. H√£y ch∆°i game b·∫±ng l·ªánh /play!")

            await interaction.response.send_message(embed=embed)

        except Exception as e:
            print(f"L·ªói khi g·ªçi API /global-sun-rank: {e}")
            await interaction.response.send_message("‚ö†Ô∏è C√≥ l·ªói x·∫£y ra khi l·∫•y b·∫£ng x·∫øp h·∫°ng.", ephemeral=True)

async def setup(bot):
    await bot.add_cog(GlobalSun(bot))
